{"version":3,"sources":["app/routes.ts","app/components/app-router.tsx","app/app.tsx","index.tsx"],"names":["privateRoutes","path","component","App","AppRouter","map","exact","to","className","src","alt","firebaseConfig","apiKey","process","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","firebase","initializeApp","Context","createContext","auth","firestore","ReactDOM","render","Provider","value","document","getElementById"],"mappings":"2MAWaA,EAAyB,CACpC,CAAEC,KAAM,GAAIC,UAAWC,I,QCTZC,EAAY,WAGvB,OACE,eAAC,IAAD,WACGJ,EAAcK,KAAI,gBAAGJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,UAAT,OACjB,cAAC,IAAD,CAAOD,KAAMA,EAAMC,UAAWA,EAAWI,OAAO,OAElD,cAAC,IAAD,CAAUC,GAAG,SCPNJ,EAAM,kBACjB,qBAAKK,UAAU,MAAf,SACE,cAAC,IAAD,UACE,yBAAQA,UAAU,aAAlB,0KAEE,qBAAKC,IAAI,oEAAoEC,IAAI,UACjF,cAAC,EAAD,Y,QCFFC,G,YAAiB,CACrBC,OAAQC,mIAAYC,kBACpBC,WAAYF,mIAAYG,sBACxBC,UAAWJ,mIAAYK,qBACvBC,cAAeN,mIAAYO,yBAC3BC,kBAAmBR,mIAAYS,8BAC/BC,MAAOV,mIAAYW,iBACnBC,cAAeZ,mIAAYa,2BAG7BC,IAASC,cAAcjB,GAEvB,IAAMkB,EAAUC,wBAAc,IAExBC,EAAOJ,IAASI,OAChBC,EAAYL,IAASK,YAE3BC,IAASC,OACL,cAACL,EAAQM,SAAT,CAAkBC,MAAO,CACvBT,aACAI,OACAC,aAHF,SAKE,cAAC,EAAD,MAEFK,SAASC,eAAe,W","file":"static/js/main.e751681a.chunk.js","sourcesContent":["import { App } from './app';\n\ninterface Route {\n  path: string,\n  component: () => JSX.Element\n}\n\nexport const publicRoutes: Route[] = [\n  { path: '', component: App },\n];\n\nexport const privateRoutes: Route[] = [\n  { path: '', component: App },\n];\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport { privateRoutes, publicRoutes } from '../routes';\n\nexport const AppRouter = (): JSX.Element => {\n  const user = true;\n\n  return user ?\n    <Switch>\n      {privateRoutes.map(({ path, component }) =>\n        <Route path={path} component={component} exact={true} />,\n      )}\n      <Redirect to='' />\n    </Switch> :\n    <Switch>\n      {publicRoutes.map(({ path, component }) =>\n        <Route path={path} component={component} exact={true} />,\n      )}\n      <Redirect to='' />\n    </Switch>;\n};\n","import './styles/App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { AppRouter } from './components/app-router';\n\nexport const App = (): JSX.Element =>\n  <div className='App'>\n    <BrowserRouter>\n      <header className='App-header'>\n        За работу, пора спасать спринт!!\n        <img src='https://reddirect.ru/wp-content/uploads/2020/01/351760-scaled.jpg' alt='error'/>\n        <AppRouter />\n      </header>\n    </BrowserRouter>\n  </div>;\n","import React, { createContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './app/styles/index.css';\nimport { App } from './app/app';\nimport firebase from 'firebase/compat';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst Context = createContext({});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nReactDOM.render(\n    <Context.Provider value={{\n      firebase,\n      auth,\n      firestore,\n    }}>\n      <App />\n    </Context.Provider>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}